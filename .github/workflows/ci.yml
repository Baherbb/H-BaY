name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  database-setup:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ecommerce
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: iamawriterbbHPharryPotter5378++
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Verify Database Connection
        run: |
          until pg_isready -h 127.0.0.1 -p 5432 -U postgres; do
            echo "Waiting for database to be ready..."
            sleep 5
          done
          echo "Database is ready!"

  backend-tests:
    runs-on: ubuntu-latest
    needs: database-setup
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout Backend Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install Backend Dependencies
        run: npm ci

      - name: Build and Test Backend
        run: |
          npm run build
          npm test -- --passWithNoTests

  frontend-tests:
    runs-on: ubuntu-latest
    needs: backend-tests
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout Frontend Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install Frontend Dependencies
        run: npm ci

      - name: Run Frontend Tests
        run: npm test

  e2e-tests:
    runs-on: ubuntu-latest
    needs:
      - frontend-tests
      - backend-tests

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install Frontend Dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Install Backend Dependencies
        run: npm ci
        working-directory: ./backend

      - name: Build Backend
        run: npm run build
        working-directory: ./backend

      - name: Start Backend Server
        run: npm start &
        working-directory: ./backend
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://postgres:iamawriterbbHPharryPotter5378++@localhost:5432/ecommerce

      - name: Start Frontend Server
        run: npm start &
        working-directory: ./frontend
        env:
          REACT_APP_API_URL: http://localhost:3000

      - name: Run Cypress Tests
        uses: cypress-io/github-action@v5
        with:
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
        working-directory: ./frontend
